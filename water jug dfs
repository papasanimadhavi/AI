def bfs(a,b,c):
    ol=[]
    cl=[]
    p=[]
    ol.append([0,0])
    while ol:
        print("open list :",ol)
        s=ol.pop()
        
        cl.append(s)
        p.append(s)
        print("closed list :",cl)
        if s[0]==c:
            print("path found")
            return p
            
        if s[0]<a and ([a,s[1]] not in ol and [a,s[1]] not in cl):
            ol.append([a,s[1]])
            
        if s[1]<b and ([s[0],b] not in ol and [s[0],b] not in cl):
            ol.append([s[0],b])
            
        if s[0]>0 and ([0,s[1]] not in ol and [0,s[1]] not in cl):
            ol.append([0,s[1]])
            
        if s[1]>0 and ([s[0],0] not in ol and [s[0],0] not in cl):
            ol.append([s[0],0])
            
        if s[0]+s[1]<=a and s[1]>=0 and ([s[0]+s[1],0] not in ol and [s[0]+s[1],0] not in cl):
            ol.append([s[0]+s[1],0])
            
        if s[0]+s[1]<=b and s[0]>0 and ([0,s[0]+s[1]] not in ol and [0,s[0]+s[1]] not in cl):
            ol.append([0,s[0]+s[1]])
            
        if s[0]+s[1]>=a and s[1]>=0 and ([a,s[1]-(a-s[0])] not in ol and [a,s[1]-(a-s[0])] not in cl):
            ol.append([a,s[1]-(a-s[0])])
            
        if s[0]+s[1]>=b and s[0]>0 and ([s[0]-(b-s[1]),b] not in ol and [s[0]-(b-s[1]),b] not in cl):
            ol.append([s[0]-(b-s[1]),b])
        
    return "No path"
        

a=int(input("enter jug1 capacity:"))
b=int(input('enter jug2 capacity:'))
c=int(input('enter goal:'))
bfs(a,b,c)
